#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

admin_mail=$(ynh_user_get_info --username=$admin --key="mail")
admin_pass=$(ynh_string_random --length=24)
secrets_peertube=$(ynh_string_random --length=24)
redis_db=$(ynh_redis_get_free_db)

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set --key=admin_pass --value=$admin_pass
ynh_app_setting_set --key=secrets_peertube --value=$secrets_peertube
ynh_app_setting_set --key=redis_db --value="$redis_db"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing nodejs..."

ynh_nodejs_install

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_script_progression "Initializing PostgreSQL modules..."

ynh_psql_db_shell <<< "CREATE EXTENSION IF NOT EXISTS unaccent;"

ynh_psql_db_shell <<< "CREATE EXTENSION IF NOT EXISTS pg_trgm;"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# BUILD YARN DEPENDENCIES
#=================================================
ynh_script_progression "Building Yarn dependencies..."

pushd "$install_dir"

	ynh_hide_warnings ynh_exec_as_app node_load_PATH  yarn config set network-timeout 300000
	ynh_hide_warnings ynh_exec_as_app node_load_PATH  yarn install --production --pure-lockfile
	ynh_hide_warnings ynh_exec_as_app node_load_PATH  yarn cache clean
popd

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd

mkdir -p "/var/log/$app"
touch "/var/log/$app/peertube.log"
#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app "/var/log/$app"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

yunohost service add $app --description="Federated video streaming platform" --log="/var/log/$app/$app.log" --needs_exposed_ports $port_rtmp

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding peertube configuration file..."

ynh_config_add --template="production.yaml" --destination="$install_dir/config/production.yaml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/config/production.yaml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/config/production.yaml"

# Initialize local setting conf file
echo '{}' > "$install_dir/config/local-production.json"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 600 "$install_dir/config/local-production.json"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/config/local-production.json"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service=$app --action="start" --log_path="systemd" --wait_until="HTTP server listening on 127.0.0.1"

#=================================================
# INSTALL LDAP PLUGIN
#=================================================
ynh_script_progression "Installing $app plugin and password..."

pushd "$install_dir"
	ynh_hide_warnings ynh_exec_as_app node_load_PATH NODE_CONFIG_DIR="$install_dir/config" NODE_ENV=production npm run plugin:install -- --npm-name peertube-plugin-auth-ldap
	ynh_hide_warnings ynh_exec_as_app node_load_PATH NODE_CONFIG_DIR="$install_dir/config" NODE_ENV=production npm run plugin:install -- --npm-name peertube-plugin-livechat
	echo "$admin_pass" | ynh_hide_warnings ynh_exec_as_app node_load_PATH NODE_CONFIG_DIR="$install_dir/config" NODE_ENV=production npm run reset-password -- -u root
popd

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
